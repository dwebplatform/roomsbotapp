{"version":3,"sources":["reducers/actions.js","components/OrderComponent.js","components/NavigationComponent.js","components/FilterOrderComponent.js","components/AspireComponent.js","routercomponents/Header.js","routercomponents/OrderPage.js","routercomponents/ApartmentPage.js","util/helpers.js","routercomponents/LoginPage.js","routercomponents/SubWayPage.js","routercomponents/ServiceForApartmentPage.js","components/PrivateRoute.js","App.js","reportWebVitals.js","util/serviceUtil.js","reducers/redux-helpers.js","reducers/index.js","index.js"],"names":["GET_ORDERS","GET_APARTMENTS","GET_APARTMENT_BY_ID","GENERAL_ERROR","CREATE_APARTMENT","CREATE_APARTMENT_ERROR","GET_ALL_APARTMENT_ERROR","IMAGE_ADD_TO_APARTMENT_SUCESS","IMAGE_ADD_TO_APARTMENT_FAIL","DELETE_APARTMENT_IMAGE_SUCCESS","GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS","GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR","ADD_SUBWAY_TO_APARTMENT_SUCCESS","ADD_SUBWAY_TO_APARTMENT_ERROR","DELETE_APARTMENT_BY_ID_SUCCESS","DELETE_APARTMENT_BY_ID_ERROR","REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS","REMOVE_SUBWAY_FROM_APARTMENT_ERROR","ADD_SUBWAY_SUCCESS","ADD_SUBWAY_ERROR","GET_SERVICE_TO_APARTMENT_SUCCESS","GET_SERVICE_TO_APARTMENT_ERROR","REMOVE_SERVICE_FROM_APARTMENT_SUCCESS","REMOVE_SERVICE_FROM_APARTMENT_ERROR","GET_ALL_SERVICES_SUCCESS","GET_ALL_SERVICES_ERROR","ADD_SERVICE_TO_APARTMENT_SUCCESS","ADD_SERVICE_TO_APARTMENT_ERROR","UPDATE_SERVICE_NAME_SUCCESS","UPDATE_SERVICE_NAME_ERROR","UPDATE_BASIC_FIELDS_SUCCESS","DELETE_SUBWAY_BY_ID_SUCCESS","DELETE_SUBWAY_BY_ID_ERROR","CLEAR_ORDER_EVENT","ADD_NEW_SERVICE_SUCCESS","ADD_NEW_SERVICE_ERROR","GET_TOKEN_SUCCESS","GET_TOKEN_ERROR","LOG_OUT","getAllServiceAction","dispatch","getState","a","serviceUtilContainer","getAllServices","data","status","type","payload","services","getAllSubWaysAction","apartmentId","getAllSubway","subways","error","loading","statuses","0","1","2","OrderComponent","id","className","fullInfo","client","rooms","copiedClient","useField","selectedStatus","value","bind","useDispatch","name","secondName","age","phone","email","Array","isArray","map","room","index","address","personsAmount","withAnimals","withChilds","fromDate","toDate","price","totalPrice","Object","keys","statusId","onClick","orderId","updateOrderStatus","updateStatusAction","routes","path","title","NavigationComponent","isAuth","useSelector","state","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","item","FilterOrderComponent","curentFilter","filterHandleChange","initialFromDate","moment","unix","format","initialToDate","useState","setFromDate","setToDate","onChange","e","target","AspireComponent","style","position","top","zIndex","left","width","borderRadius","height","src","Header","OrderPage","curPage","setPage","localStorage","getItem","Date","getTime","filterObject","setFilterObject","useEffect","page","console","log","setItem","getOrders","orders","msg","getOrdersAction","store","OrderList","i","unixFromDate","parse","unixToDate","JSON","stringify","preventDefault","p","aria-hidden","EditApartment","useParams","getApartmentById","apartment","getApartmentByIdAction","popupInfo","apartmentImageDeleted","removeSubWayFromApartmentSuccess","successfullyAdded","deletedApartmentSuccess","roomAmount","isVip","editFields","setEditFields","obj","props","isPropsIn","forEach","objectHasProps","Subways","useApartmentUpdate","handleBasicFieldsChange","prevState","addedImages","setAddedImages","preloadedUrls","setPreloadedUrls","document","location","reload","handleDeleteImage","imageIndex","deleteApartmentImageByIndex","deleteApartmentImageByIndexAction","handleDeleteSubWayFromApartment","subwayId","removeSubWayFromApartment","removeSubWayFromApartmentAction","htmlFor","files","length","URL","createObjectURL","imageFileArray","addNewImageToApartment","addNewImageToApartmentAction","fontWeight","fontSize","subWayItem","images","apartmentHasImage","image","fields","updateApartmentById","updateBasicApartmentFieldsAction","deleteApartmentById","deleteApartmentByIdAction","AddApartment","handleAddApartmentListener","apartmentFields","setApartmentFields","handleImageLoad","file","concat","handleAddApartment","copyApatrmentsFields","createOrderEvent","EditServiceInput","allServices","servicesForCurrentApartment","selectedServiceId","getServicesForApartment","getServicesForApartmentAction","handleDeleteServiceFromApartment","serviceId","deleteServiceFromApartmentAction","serviceInstance","el","includes","disabled","addServiceToApartment","service","addServiceToApartmentAction","EditSubWayInput","subwaysNotIncludedInApartment","addedSubway","subwayAdded","addedSubwayId","addSubwayForApartment","addSubwayForApartmentAction","ApartmentPage","useRouteMatch","url","apartments","getAllApartments","exact","apartmentsField","formDataObject","createApartment","LoginPage","password","userData","setUserData","authError","prevData","placeholder","pass","getToken","token","SubWayPage","geo","subWayFields","setSubWayFields","success","handleDeleteSubWay","deleteSubWayById","handleDeleteSubWayAction","fullStr","addSubway","addSubWayAction","ServiceForApartmentPage","servicesName","setServicesName","handleAddService","serviceName","addService","curServiceId","setCurServiceId","chosenServiceName","setChosenServiceName","handleDeleteService","deleteService","deleteServiceAction","handleBlurChange","newServiceName","updateServiceName","addNewServiceSuccess","onBlur","stopPropagation","PrivateRoute","Component","children","rest","LogOutPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ServiceUtilContainer","config","headers","Authorization","axios","post","response","this","get","imageFilesArray","formData","FormData","append","key","fetch","method","credentials","body","json","finalUrl","immitateDeletionServiceFromApartment","filter","immitateAddServiceToApartment","copy","isServiceAlreadyThere","initialState","adminToken","reducer","action","removeItem","addNewServiceError","servicesCopy","updateServiceSuccess","serviceAddToApartmentSuccess","servicesForCurrentApartmentAfterDelete","removeApartmentFromApartmentSuccess","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b528f472.chunk.js","sourcesContent":["export const GET_ORDERS = \"GET_ORDERS\";\nexport const GET_APARTMENTS = \"GET_APARTMENTS\";\nexport const GET_APARTMENT_BY_ID = \"GET_APARTMENT_BY_ID\";\nexport const GET_APARTMENT_BY_ID_ERROR = \"GET_APARTMENT_BY_ID_ERROR\";\nexport const GENERAL_ERROR = \"GENERAL_ERROR\";\nexport const UPDATE_ORDER_STATUS = \"UPDATE_ORDER_STATUS\";\nexport const CREATE_APARTMENT = \"CREATE_APARTMENT\";\nexport const CREATE_APARTMENT_ERROR = \"CREATE_APARTMENT_ERROR\";\nexport const GET_ALL_APARTMENT_ERROR = \"GET_ALL_APARTMENT_ERROR\";\n\nexport const IMAGE_ADD_TO_APARTMENT_SUCESS = \"IMAGE_ADD_TO_APARTMENT_SUCESS\";\nexport const IMAGE_ADD_TO_APARTMENT_FAIL = \"IMAGE_ADD_TO_APARTMENT_FAIL\";\n\nexport const DELETE_APARTMENT_IMAGE_SUCCESS = \"DELETE_APARTMENT_IMAGE_SUCCESS\";\nexport const DELETE_APARTMENT_IMAGE_ERROR = \"DELETE_APARTMENT_IMAGE_ERROR\";\nexport const GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS = \"GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS\";\nexport const GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR = \"GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR\";\n\nexport const ADD_SUBWAY_TO_APARTMENT_SUCCESS = \"ADD_SUBWAY_TO_APARTMENT_SUCCESS\";\nexport const ADD_SUBWAY_TO_APARTMENT_ERROR = \"ADD_SUBWAY_TO_APARTMENT_ERROR\";\n\nexport const DELETE_APARTMENT_BY_ID_SUCCESS = \"DELETE_APARTMENT_BY_ID_SUCCESS\";\nexport const DELETE_APARTMENT_BY_ID_ERROR = \"DELETE_APARTMENT_BY_ID_ERROR\";\n\nexport const REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS = \"REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS\";\nexport const REMOVE_SUBWAY_FROM_APARTMENT_ERROR = \"REMOVE_SUBWAY_FROM_APARTMENT_ERROR\";\n\nexport const ADD_SUBWAY_SUCCESS = \"ADD_SUBWAY_SUCCESS\";\nexport const ADD_SUBWAY_ERROR = \"ADD_SUBWAY_ERROR\";\n\nexport const GET_SERVICE_TO_APARTMENT_SUCCESS = \"GET_SERVICE_TO_APARTMENT_SUCCESS\";\nexport const GET_SERVICE_TO_APARTMENT_ERROR = \"GET_SERVICE_TO_APARTMENT_ERROR\";\n\nexport const REMOVE_SERVICE_FROM_APARTMENT_SUCCESS = \"REMOVE_SERVICE_FROM_APARTMENT_SUCCESS\";\nexport const REMOVE_SERVICE_FROM_APARTMENT_ERROR = \"REMOVE_SERVICE_FROM_APARTMENT_ERROR\";\n\nexport const GET_ALL_SERVICES_SUCCESS = \"GET_ALL_SERVICES_SUCCESS\";\nexport const GET_ALL_SERVICES_ERROR = \"GET_ALL_SERVICES_ERROR\";\n\nexport const ADD_SERVICE_TO_APARTMENT_SUCCESS = \"ADD_SERVICE_TO_APARTMENT_SUCCESS\";\nexport const ADD_SERVICE_TO_APARTMENT_ERROR = \"ADD_SERVICE_TO_APARTMENT_ERROR\";\n\nexport const UPDATE_SERVICE_NAME_SUCCESS = \"UPDATE_SERVICE_NAME_SUCCESS\";\nexport const UPDATE_SERVICE_NAME_ERROR = \"UPDATE_SERVICE_NAME_ERROR\";\n\nexport const UPDATE_BASIC_FIELDS_SUCCESS = \"UPDATE_BASIC_FIELDS_SUCCESS\";\n\nexport const DELETE_SUBWAY_BY_ID_SUCCESS = \"DELETE_SUBWAY_BY_ID_SUCCESS\";\nexport const DELETE_SUBWAY_BY_ID_ERROR = \"DELETE_SUBWAY_BY_ID_ERROR\";\n\nexport const CLEAR_ORDER_EVENT = \"CLEAR_ORDER_EVENT\";\n\nexport const ADD_NEW_SERVICE_SUCCESS = \"ADD_NEW_SERVICE_SUCCESS\";\nexport const ADD_NEW_SERVICE_ERROR = \"ADD_NEW_SERVICE_ERROR\";\n\nexport const DELETE_SERVICE_SUCCESS = \"DELETE_SERVICE_SUCCESS\";\nexport const DELETE_SERVICE_ERROR = \"DELETE_SERVICE_ERROR\";\n\n\nexport const GET_TOKEN_SUCCESS = \"GET_TOKEN_SUCCESS\";\nexport const GET_TOKEN_ERROR = \"GET_TOKEN_ERROR\";\n\nexport const LOG_OUT = \"LOG_OUT\";\nexport const logoutAction = () => {\n    return {\n        type: LOG_OUT\n    }\n};\nexport const submitUserAction = (email, pass) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.getToken(email, pass);\n    if (data.status == 'ok') {\n        dispatch({\n            type: GET_TOKEN_SUCCESS,\n            payload: {\n                token: data.token\n            }\n        });\n    } else {\n        dispatch({\n            type: GET_TOKEN_ERROR,\n            payload: {\n                msg: 'не удалось войти'\n            }\n        });\n    }\n}\nexport const deleteServiceAction = (serviceId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.deleteService(serviceId);\n    if (data.status == 'ok') {\n        dispatch({\n            type: DELETE_SERVICE_SUCCESS\n        })\n    } else {\n        dispatch({\n            type: DELETE_SERVICE_ERROR\n        });\n\n    }\n};\nexport const addServiceAction = (serviceName) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.addService(serviceName);\n    if (data.status == \"ok\") {\n        dispatch({\n            type: ADD_NEW_SERVICE_SUCCESS,\n            payload: {\n            }\n        });\n    } else {\n        dispatch({\n            type: ADD_NEW_SERVICE_ERROR,\n\n        });\n    }\n}\nexport const handleDeleteSubWayAction = (subwayId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.deleteSubWayById(subwayId);\n    if (data.status == 'ok') {\n        dispatch({\n\n            type: DELETE_SUBWAY_BY_ID_SUCCESS,\n            payload: {\n                subways: data.subways\n            }\n        });\n    } else {\n        dispatch({\n            type: DELETE_SUBWAY_BY_ID_ERROR\n        });\n\n    }\n\n}\nexport const updateServiceNameAction = (serviceId, newServiceName) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.updateServiceName(serviceId, newServiceName);\n    if (data.status === 'ok') {\n        dispatch({\n            payload: {\n                services: data.services,\n            },\n            type: UPDATE_SERVICE_NAME_SUCCESS\n        })\n    } else {\n        dispatch({\n            type: UPDATE_SERVICE_NAME_ERROR\n\n        })\n    }\n}\n\nexport const addServiceToApartmentAction = (apartmentId, selectedServiceId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.addServiceToApartment(apartmentId, selectedServiceId);\n    if (data.status == 'ok') {\n        dispatch({\n            type: ADD_SERVICE_TO_APARTMENT_SUCCESS,\n            payload: {\n                service: data.service,\n            }\n        })\n    } else {\n        dispatch({\n            type: ADD_SERVICE_TO_APARTMENT_ERROR\n        });\n    }\n\n\n}\nexport const getAllServiceAction = () => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.getAllServices();\n    if (data.status == 'ok') {\n        dispatch({\n            type: GET_ALL_SERVICES_SUCCESS,\n            payload: {\n                services: data.services\n            }\n        });\n    } else {\n        dispatch({\n            type: GET_ALL_SERVICES_ERROR,\n            payload: {\n                services: [],\n\n            }\n        });\n    }\n\n\n}\nexport const deleteServiceFromApartmentAction = (apartmentId, serviceId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.deleteServiceFromApartmentAction(apartmentId, serviceId);\n    if (data.status === 'ok') {\n        dispatch({\n            type: REMOVE_SERVICE_FROM_APARTMENT_SUCCESS,\n            payload: {\n                apartmentId, serviceId\n            }\n        });\n    } else {\n        dispatch({\n            type: REMOVE_SERVICE_FROM_APARTMENT_ERROR,\n            payload: {\n                error: true,\n                loading: false\n            }\n        })\n    }\n}\n\nexport const getServicesForApartmentAction = (apartmentId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.getServicesForApartment(apartmentId);\n    if (data.status == 'ok') {\n        dispatch({\n            type: GET_SERVICE_TO_APARTMENT_SUCCESS,\n            payload: {\n                services: data.services,\n                error: false,\n                loading: false\n            }\n        });\n    } else {\n        dispatch({\n            type: GET_SERVICE_TO_APARTMENT_ERROR,\n            payload: {\n                services: [],\n                error: true,\n                loading: false,\n            }\n        });\n    }\n}\n\nexport const addSubWayAction = ({ name, geo }) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.addSubway(name, geo);\n    if (data.status === 'ok') {\n        dispatch({\n            type: ADD_SUBWAY_SUCCESS,\n            payload: {\n                msg: 'Вы успешно добавили новое метро'\n            }\n        })\n    } else {\n        dispatch({\n            type: ADD_SUBWAY_ERROR,\n            payload: {\n                msg: 'Произошла какая-то ошибка при добавлении метро'\n            }\n        });\n    }\n}\n\nexport const removeSubWayFromApartmentAction = (apartmentId, subwayId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.removeSubWayFromApartment(apartmentId, subwayId);\n\n    if (data.status === 'ok') {\n        dispatch({\n            type: REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS,\n        });\n    } else {\n        dispatch({\n            type: REMOVE_SUBWAY_FROM_APARTMENT_ERROR\n        });\n    }\n}\n\nexport const deleteApartmentByIdAction = (apartmentId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.deleteApartmentById(apartmentId);\n    console.log(data);\n    if (data.status == 'ok') {\n        dispatch({\n            type: DELETE_APARTMENT_BY_ID_SUCCESS\n        });\n    } else {\n        dispatch({ type: DELETE_APARTMENT_BY_ID_ERROR });\n    }\n\n\n}\nexport const addSubwayForApartmentAction = (addedSubwayId, apartmentId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.addSubwayForApartment(addedSubwayId, apartmentId);\n    if (data.status == 'ok') {\n        dispatch({\n            type: ADD_SUBWAY_TO_APARTMENT_SUCCESS,\n\n        })\n    } else {\n        dispatch({\n            type: ADD_SUBWAY_TO_APARTMENT_ERROR\n        })\n    }\n}\n\nexport const getAllSubWaysAction = (apartmentId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.getAllSubway(apartmentId);\n    if (data.status == 'ok') {\n        dispatch({\n            type: GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS,\n            payload: {\n                subways: data.subways,\n                error: false,\n                loading: false\n            }\n        });\n    } else {\n        dispatch({\n            type: GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR,\n            payload: {\n                subways: [],\n                error: true,\n                loading: false\n            }\n        });\n    }\n}\nexport const addNewImageToApartmentAction = (apartmentId, imageFileArray) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.addNewImageToApartment(apartmentId, imageFileArray);\n    console.log(data);\n    if (data.status == 'ok') {\n        dispatch({\n            type: IMAGE_ADD_TO_APARTMENT_SUCESS,\n        });\n    } else {\n        dispatch({\n            type: IMAGE_ADD_TO_APARTMENT_FAIL,\n        });\n    }\n}\nexport const updateBasicApartmentFieldsAction = (apartmentId, fields) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.updateApartmentById(apartmentId, fields);\n    console.log({ data });\n    dispatch({\n        type: UPDATE_BASIC_FIELDS_SUCCESS\n    });\n\n};\n\nexport const deleteApartmentImageByIndexAction = (apartmentId, imageIndex) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.deleteApartmentImageByIndex(apartmentId, imageIndex);\n    console.log(data);\n    if (data.status == 'ok') {\n        dispatch({\n            type: DELETE_APARTMENT_IMAGE_SUCCESS\n        });\n    } else {\n        dispatch({\n            type: DELETE_APARTMENT_IMAGE_ERROR\n        });\n    }\n\n}\nexport const getApartmentByIdAction = (apartmentId) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.getApartmentById(apartmentId);\n    if (data.status === 'ok') {\n        dispatch({\n            type: GET_APARTMENT_BY_ID,\n            payload: {\n                apartment: data.apartment,\n                loading: false,\n                error: false\n            }\n        });\n    } else {\n        dispatch({\n            type: GET_APARTMENT_BY_ID_ERROR,\n            payload: {\n                error: true,\n                loading: false,\n                data: {}\n            }\n        })\n    }\n\n}\n\nexport const clearOrderEventAction = () => async (dispatch, getState) => {\n    dispatch({\n        type: CLEAR_ORDER_EVENT\n    });\n}\nexport const createApartmentAction = (formDataObject) => async (dispatch, getState) => {\n    let { data } = await getState().serviceUtilContainer.createApartment(formDataObject);\n    if (data.status === 'ok') {\n        dispatch({\n            type: CREATE_APARTMENT, payload: {\n                ...data,\n            }\n        });\n    } else {\n        dispatch({ type: CREATE_APARTMENT_ERROR })\n    }\n\n}\n\nexport const getAllApartmentsAction = () => async (dispatch, getState) => {\n    try {\n        let { data } = await getState().serviceUtilContainer.getAllApartments();\n        if (data.status == 'ok') {\n            dispatch({\n                type: GET_APARTMENTS,\n                payload: {\n                    apartments: data.apartments,\n                    error: false,\n                    loading: false\n                }\n            })\n        } else {\n            dispatch({\n                type: GET_ALL_APARTMENT_ERROR,\n                payload: {\n                    error: true,\n                    loading: false\n                }\n            });\n        }\n\n    } catch (e) {\n        dispatch({\n            type: GET_ALL_APARTMENT_ERROR,\n            payload: {\n                error: true,\n                loading: false\n            }\n        })\n    }\n}\nexport const updateStatusAction = (selectedStatus, orderId) => async (dispatch, getState) => {\n    try {\n        let data = await getState().serviceUtilContainer.updateOrderStatus(selectedStatus, orderId);\n        if (data.status === 'ok') {\n            dispatch({\n                type: UPDATE_ORDER_STATUS,\n                payload: {\n                    status: \"ok\"\n                }\n            });\n        } else {\n            dispatch({\n                type: GENERAL_ERROR,\n                payload: {\n                    status: \"error\",\n\n                }\n            });\n        }\n    } catch (e) {\n        dispatch({ type: GENERAL_ERROR });\n    }\n}\nexport const getOrdersAction = (page, { filterObject }) => async (dispatch, getState) => {\n    try {\n        page = page || 1;\n        // add filter params = fromDate, toDate\n        console.log('DISPATCHED FILTER OBJECT NOW', filterObject);\n        localStorage.setItem('from_date', filterObject.fromDate);\n        localStorage.setItem('to_date', filterObject.toDate);\n        let data = await getState().serviceUtilContainer.getOrders(page, { filterObject });\n        if (data.status == 'ok') {\n            dispatch({\n                type: GET_ORDERS,\n                payload: {\n                    data: data.orders,\n                    loading: false,\n                    error: false\n                }\n            });\n        } else {\n            dispatch({\n                type: GET_ORDERS,\n                payload: {\n                    data: [],\n                    msg: 'Не удалось получить ни одного заказа',\n                    loading: false,\n                    error: true\n                }\n            })\n        }\n\n    } catch (e) {\n        dispatch({\n            type: GET_ORDERS,\n            payload: {\n                data: [],\n                loading: false,\n                error: true,\n                msg: 'Не удалось получить ни одного заказа'\n            }\n        });\n    }\n}","import { useField } from 'react-hooks-lib';\nimport { useDispatch } from 'react-redux';\nimport { updateStatusAction } from '../reducers/actions';\nimport './order.css';\n\nconst statuses = {\n    0: 'Новый заказ',\n    1: 'Аннулирован',\n    2: 'Совершен'\n};\nexport const OrderComponent = ({ id, className, fullInfo, status }) => {\n    //TODO: найти песню i like being\n    const { client, rooms } = fullInfo;\n    let copiedClient = client || {};\n    //TODO: сделать пагинацию в двух классах Service и Dummy\n    const { value: selectedStatus, bind } = useField(status + '');\n    const dispatch = useDispatch();\n    const handleChangeStatus = () => {\n        // dispatch async ...\n        dispatch(updateStatusAction(selectedStatus, id));\n    }\n    return (<div className={`order-container ${className ? className : ''}`}>\n        <div className={`order ${status == 0 ? 'order__status-new' : ''}`}>\n            <div className=\"order__client\">\n                <h3>Клиент</h3>\n                <div className=\"order__client-info \">\n                    <span className=\"order__client-field\">Имя:{copiedClient.name}</span>\n                    <span className=\"order__client-field\">Фамилия:{copiedClient.secondName}</span>\n                    <span className=\"order__client-field\">Возраст:{copiedClient.age}</span>\n                    <span className=\"order__client-field\">Телефон:{copiedClient.phone}</span>\n                    <span className=\"order__client-field\">mail:{copiedClient.email}</span>\n                </div>\n            </div>\n            <div className=\"order__apartments\">\n                <div className=\"order__apartments-items\">\n                    <h3 className=\"order__apartments-header\"><span>Квартиры</span><span> Статус : {statuses[status]}</span></h3>\n                    {\n                        Array.isArray(rooms) && rooms.map((room, index) => {\n                            return (<div className=\"order__apartments-item\" key={index}>\n                                <span className=\"order__apartment-field\">адрес:{room.address}</span>\n                                <span className=\"order__apartment-field\">кол-во гостей:{room.personsAmount}</span>\n                                <span className=\"order__apartment-field\">Наличие животных: {room.withAnimals ? 'Да' : 'Нет'}</span>\n                                <span className=\"order__apartment-field\">Дети:{room.withChilds ? 'Да' : 'Нет'}</span>\n                                {/* TODO: сделать тут услуги из бд-ки */}\n                                <span className=\"order__apartment-field\">Услуги:</span>\n                                <span className=\"order__apartment-field\">Время заезда:{room.fromDate}</span>\n                                <span className=\"order__apartment-field\">Время выезда:{room.toDate}</span>\n                                <span className=\"order__apartment-field\">Цена за апартаменты:{room.price}</span>\n                                <span className=\"order__apartment-field\">Цена c учетом услуг:{room.totalPrice}</span>\n                            </div>)\n                        })\n                    }\n                    <div className=\"order__status-btn-container\">\n                        <select className=\"order__status-selector\" {...bind}>\n                            {\n                                Object.keys(statuses).map((statusId) => {\n                                    return <option key={statusId} value={statusId}>{statuses[statusId]}</option>\n                                })\n                            }\n                        </select>\n                        <button className=\"order__status-btn\" onClick={handleChangeStatus}>Сменить статус </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst routes = [{ path: '/orders', title: 'Заказы' }, { path: '/apartments', title: 'Квартиры' }, { path: '/subways', title: 'Метро' }, { path: '/services', title: 'Услуги' }];\n\nexport const NavigationComponent = () => {\n    const { isAuth } = useSelector(state => state);\n    return (<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                    <Link className=\"nav-link\" to=\"/\">Главная <span className=\"sr-only\"></span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    {!isAuth && <Link className=\"nav-link\" to=\"/login\" >Войти</Link>}\n                    {isAuth && <Link className=\"nav-link\" to=\"/logout\">Выйти</Link>}\n                </li>\n                {isAuth && routes.map((item) => {\n                    return (<li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={item.path} >{item.title}</Link>\n                    </li>)\n                })}\n            </ul>\n        </div>\n    </nav>)\n}","import { useState } from 'react';\nimport moment from 'moment';\nimport './filterorder.css';\n\n\nexport const FilterOrderComponent = ({ curentFilter, filterHandleChange }) => {\n    let initialFromDate = moment.unix(curentFilter.fromDate).format(\"YYYY-MM-DD\");\n    let initialToDate = moment.unix(curentFilter.toDate).format(\"YYYY-MM-DD\");\n    const [fromDate, setFromDate] = useState(initialFromDate);\n    const [toDate, setToDate] = useState(initialToDate);\n    const handleFromDateChange = (e) => {\n        setFromDate(e.target.value);\n    }\n    const handleToDateChange = (e) => {\n        setToDate(e.target.value);\n    }\n    return (<div className=\"filter-container\" >\n        <div className=\"filter-container__item date-from-container\">\n            <label>заселение от:</label>\n            <input type=\"date\" name=\"trip-start\" onChange={handleFromDateChange} value={fromDate} />\n        </div>\n        <div className=\"filter-container__item date-to-container\">\n            <label>заселение по:</label>\n            <input type=\"date\" name=\"trip-start\" value={toDate} onChange={handleToDateChange} />\n        </div>\n        <div className=\"filter-container__item\">\n            <button className=\"btn btn-primary\" onClick={() => {\n                filterHandleChange({ fromDate, toDate })\n            }}>Фильтровать</button>\n        </div>\n    </div>\n    );\n}","export const AspireComponent = () => {\n    return (<div style={{\n        position: 'fixed',\n        top: 0,\n        zIndex: 10,\n        left: '85%',\n\n    }}>\n        <img style={{\n            width: '200px',\n            borderRadius: '50%',\n            height: '200px'\n        }} src=\"https://i.pinimg.com/originals/32/62/b5/3262b55de055134f1a10f886c30c808f.jpg\" />\n    </div>);\n}","import { NavigationComponent } from '../components/NavigationComponent';\nimport { AspireComponent } from '../components/AspireComponent';\n\nexport const Header = () => {\n    return (<div className=\"header\" >\n        <AspireComponent />\n        <NavigationComponent />\n    </div>)\n}","\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OrderComponent } from '../components/OrderComponent';\nimport { FilterOrderComponent } from '../components/FilterOrderComponent';\nimport { getOrdersAction } from '../reducers/actions';\nexport const OrderPage = () => {\n    const dispatch = useDispatch();\n    const [curPage, setPage] = useState(1);\n    localStorage.getItem('from_date');\n    localStorage.getItem('to_date');\n    const [filterObject, setFilterObject] = useState({\n        fromDate: localStorage.getItem('from_date') ? localStorage.getItem('from_date') : new Date().getTime() / 1000,\n        toDate: localStorage.getItem('to_date') ? localStorage.getItem('to_date') : new Date().getTime() / 1000 + 30 * 24 * 3600\n    });\n    const handleFilterChange = ({ fromDate, toDate }) => {\n        let unixFromDate = Date.parse(fromDate) / 1000;\n        let unixToDate = Date.parse(toDate) / 1000;\n        // затем setим filterObject  фильтр в надежде что заработает\n        setFilterObject({\n            fromDate: unixFromDate,\n            toDate: unixToDate\n        });\n    }\n    useEffect(() => {\n        //TODO: check protected\n        // ! получаем  заказы\n        dispatch(getOrdersAction(curPage, { filterObject }));\n    }, [curPage, filterObject]);\n    const { data: orders, loading, error } = useSelector((store) => store.orders);\n\n    function OrderList() {\n        return (orders && orders.map((item, i) => {\n            return <OrderComponent id={item.id} className=\"main-container__item\" fullInfo={item.fullInfo} status={item.status} key={i} />\n        }));\n\n    }\n    return (\n        <section className=\"app\">\n            <div className=\"paddinger\" >\n                {/*//TODO: добавить  в фильтр поле статус !!!  */}\n                <FilterOrderComponent curentFilter={{ ...filterObject }} filterHandleChange={handleFilterChange} />\n            </div>\n            <main className=\"main-container\">\n                {error && <pre>{JSON.stringify(error)}</pre>}\n                <OrderList />\n            </main>\n            <nav className=\"main-navigation\" aria-label=\"Orders navigation \">\n                <ul className=\"pagination\">\n                    <li className=\"page-item\">\n                        <a className=\"page-link my-link\" onClick={(e) => {\n                            e.preventDefault();\n                            if (curPage <= 0) {\n                                return;\n                            } else {\n                                setPage((p) => p - 1);\n                            }\n                        }} aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span className=\"sr-only\">Previous</span>\n                        </a>\n                    </li>\n                    <li className=\"page-item \"><a className=\"page-link\" href=\"!#\">...</a></li>\n                    <li className=\"page-item\">\n                        <a className=\"page-link my-link\" onClick={(e) => {\n                            e.preventDefault();\n                            setPage((p) => p + 1);\n                        }} aria-label=\"Next\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                            <span className=\"sr-only\" >Next</span>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </section>\n    );\n}","\nimport axios from 'axios';\nimport { useEffect, useState, useMemo, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useField } from 'react-hooks-lib';\nimport { BsXCircle } from 'react-icons/bs';\nimport './apartmentpage.css';\nimport { objectHasProps } from '../util/helpers';\n\n\nimport { addServiceToApartmentAction, clearOrderEventAction, getAllServiceAction, createApartmentAction, deleteServiceFromApartmentAction, getServicesForApartmentAction, removeSubWayFromApartmentAction, deleteApartmentByIdAction, addSubwayForApartmentAction, deleteApartmentImageByIndexAction, getAllSubWaysAction, getAllApartmentsAction, getApartmentByIdAction, updateBasicApartmentFieldsAction, addNewImageToApartmentAction } from '../reducers/actions';\nimport { BrowserRouter, Redirect, Link, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\n\nexport function useApartmentUpdate(apartmentId, apartment) {\n    const [editFields, setEditFields] = useState({\n        address: '',\n        price: 2500,\n        roomAmount: 1,\n        isVip: \"0\",\n        subways: [],\n    });\n    const dispatch = useDispatch();\n    useEffect(() => {\n\n        // console.log(objectHasProps(apartment,['address','price','roomAmount','isVip','Subways']));\n        if (objectHasProps(apartment, ['address', 'price', 'roomAmount', 'isVip', 'Subways'])) {\n            setEditFields({\n                address: apartment.address,\n                price: apartment.price,\n                roomAmount: apartment.roomAmount,\n                isVip: apartment.isVip ? \"1\" : \"0\",\n                subways: apartment.Subways,\n            });\n        }\n    }, [apartment, apartmentId]);\n    return [editFields, setEditFields];\n}\n\nconst EditApartment = () => {\n    let { apartmentId } = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getApartmentByIdAction(apartmentId))\n    }, [apartmentId]);\n\n    const { data: apartment, error, loading } = useSelector((state) => state.apartment);\n    const { apartmentImageDeleted, removeSubWayFromApartmentSuccess, successfullyAdded, deletedApartmentSuccess } = useSelector((state) => state.popupInfo);\n    const [editFields, setEditFields] = useApartmentUpdate(apartmentId, apartment);\n\n    const handleBasicFieldsChange = (e) => {\n        setEditFields((prevState) => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    // добавляем image для текущей комнаты\n    const [addedImages, setAddedImages] = useState([]);\n    const [preloadedUrls, setPreloadedUrls] = useState([]);// preloaded urls\n    const handleShowAddPreview = (e) => {\n        let files = e.target.files;\n        if (files.length > 0) {\n            let src = URL.createObjectURL(e.target.files[0]);\n            if (preloadedUrls.length < 10) {\n                setPreloadedUrls([...preloadedUrls, src]);\n            }\n            setAddedImages((prevState) => {\n                return [...prevState, e.target.files[0]];\n            });\n        }\n    }\n    if (removeSubWayFromApartmentSuccess) { // при успешном удалении перезагрузить\n        document.location.reload();\n    }\n    if (successfullyAdded) {// после добавления изображений\n        document.location.reload();\n    }\n    if (deletedApartmentSuccess) {// после удаления квартиры\n        return <Redirect to='/apartments' />;\n    }\n    if (apartmentImageDeleted) {// после каждого удаления изображения\n        document.location.reload();\n    }\n    const handleEditApartment = (e) => {\n        console.log(editFields);\n        dispatch(updateBasicApartmentFieldsAction(apartmentId, editFields));\n    }\n    function apartmentHasImage(apartment) {\n        return apartment.images && apartment.images.length\n    }\n    const handleDeleteImage = (imageIndex) => {\n        dispatch(deleteApartmentImageByIndexAction(apartmentId, imageIndex));\n    }\n\n    const handleAddImagesToApartment = () => {\n        dispatch(addNewImageToApartmentAction(apartmentId, [...addedImages]));\n    }\n    const handleDeleteApartment = () => {\n        dispatch(deleteApartmentByIdAction(apartmentId));\n    }\n    const handleDeleteSubWayFromApartment = (subwayId) => {\n        dispatch(removeSubWayFromApartmentAction(apartmentId, subwayId));\n    }\n    return (\n        <div className=\"edit-apartment-container\">\n            <div className=\"edit-apartmentcontainer__item form-group\">\n                <label htmlFor={\"apartment-adress-\" + apartmentId}>Адрес:</label>\n                <input id={\"apartment-adress-\" + apartmentId} type=\"text\" className=\"form-control\"\n                    value={editFields.address}\n                    name=\"address\"\n                    onChange={handleBasicFieldsChange}\n                />\n            </div>\n            <div className=\"edit-apartmentcontainer__item form-group\">\n                <label htmlFor={\"apartment-amount-\" + apartmentId}>Количество комнат:</label>\n                <input id={\"apartment-amount-\" + apartmentId} type=\"text\" className=\"form-control\"\n                    value={editFields.roomAmount}\n                    name=\"roomAmount\"\n                    onChange={handleBasicFieldsChange}\n                />\n            </div>\n            <div className=\"edit-apartmentcontainer__item form-group\">\n                <label htmlFor={\"apartment-price-\" + apartmentId}>Цена:</label>\n                <input id={\"apartment-price-\" + apartmentId} type=\"text\" className=\"form-control\"\n                    value={editFields.price}\n                    name=\"price\"\n                    onChange={handleBasicFieldsChange}\n                />\n            </div>\n\n            <div className=\"edit-apartmentcontainer__item form-group edit-apartmentcontainer__item--added-image\">\n                <div className=\"custom-file\">\n                    <input type=\"file\" className=\"custom-file-input\"\n                        id={\"add-image-input\" + apartmentId}\n                        onChange={handleShowAddPreview}\n                    />\n                    <label className=\"custom-file-label\" htmlFor={\"add-image-input\" + apartmentId}>Choose file</label>\n                </div>\n                <div className=\"container\" >\n                    <button className=\"btn btn-success\" onClick={handleAddImagesToApartment} style={{ fontWeight: 'bold', fontSize: '16px' }}>+</button>\n                </div>\n            </div>\n            <div className=\"preloaded-image-container\">\n                {preloadedUrls.map((item, index) => {\n                    return <div className=\"preloaded-image-container__item\" key={index} ><img className=\"img-thumbnail apartment-image\" src={item} /></div>\n                })}\n            </div>\n            <div className=\"edit-apartmentcontainer__item form-group\">\n                <label htmlFor={\"apartment-status-\" + apartmentId}>Статус квартиры:</label>\n                <select className=\"form-control\" id={\"apartment-status-\" + apartmentId}\n                    name=\"isVip\"\n                    value={editFields.isVip}\n                    onChange={handleBasicFieldsChange}\n                >\n                    <option value=\"1\">VIP</option>\n                    <option value=\"0\">Эконом</option>\n                </select>\n            </div>\n            <div className=\"all-subway-for-apartment-container d-flex\">\n\n                {(editFields.subways && editFields.subways.length) ?\n                    editFields.subways.map((subWayItem) => {\n                        return <span className=\"badge badge-light p-3 m-2 subway-item\" key={subWayItem.id}>\n                            {subWayItem.name}\n                            <BsXCircle onClick={() => handleDeleteSubWayFromApartment(subWayItem.id)} className=\"subway-item-icon\" />\n                        </span>\n                    }) : null\n                }\n            </div>\n            <EditSubWayInput apartmentId={apartmentId} />\n            <hr />\n            <EditServiceInput apartmentId={apartmentId} />\n            <div className=\"edit-apartmentcontainer__item\">\n                <label className=\"current-apartment-container__field-label\">Фотографии</label>\n                <div className=\"image-container\">\n                    {apartmentHasImage(apartment) ? apartment.images.map((image, imageIndex) => {\n                        return (<div className=\"image-item\" key={imageIndex} >\n                            <div className=\"delete-image\"><span className=\"delete-image-btn\" onClick={() => handleDeleteImage(imageIndex)}>X</span></div>\n                            <img className=\"img-thumbnail apartment-image\" src={image} />\n                        </div>)\n                    }) : null}\n                </div>\n            </div>\n\n\n            <div className=\"current-apartment-container__item\">\n                <div className=\"form-group\">\n                    <button className=\"btn btn-success w-100\" onClick={handleEditApartment}>ИЗМЕНИТЬ</button>\n                    <button className=\"btn btn-danger w-100 my-3\" onClick={handleDeleteApartment} >УДАЛИТЬ КВАРТИРУ</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\n\n\nconst AddApartment = ({ handleAddApartmentListener }) => {\n    const dispatch = useDispatch();\n    const [apartmentFields, setApartmentFields] = useState({\n        address: '',\n        isVip: 0,\n        roomAmount: 1,\n        images: [],\n        price: 2500\n    });\n    const handleAddressChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                address: e.target.value\n            }\n        });\n    }\n    const handleIsVipChange = (e) => {\n        let value = e.target.value;\n        if (value == \"1\") {\n            setApartmentFields((prevState) => {\n                return {\n                    ...prevState,\n                    isVip: 1\n                }\n            })\n        } else {\n            setApartmentFields((prevState) => {\n                return {\n                    ...prevState,\n                    isVip: 0\n                }\n            })\n        }\n    }\n\n    const handlePriceChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                price: e.target.value\n            }\n        });\n    }\n\n    const handleRoomAmountChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                roomAmount: e.target.value\n            }\n        })\n    }\n    const handleImageLoad = async (e) => {\n        let file = e.target.files[0] || null;\n        if (!file) {\n            return;\n        }\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                images: prevState.images.concat(file)\n            }\n        });\n    }\n    const handleAddApartment = async (e) => {\n        e.preventDefault();\n        let copyApatrmentsFields = { ...apartmentFields };\n        handleAddApartmentListener(copyApatrmentsFields);\n    }\n    const { createOrderEvent } = useSelector((state) => state.popupInfo);\n    useEffect(() => {\n        if (createOrderEvent) {\n            dispatch(clearOrderEventAction());\n        }\n    }, []);\n    return (<>  <div className=\"current-apartment-container__item\">\n        {createOrderEvent && <div className=\"alert alert-success\">{createOrderEvent.msg}</div>}\n        <div className=\"current-apartment-container__field\">\n            <label className=\"current-apartment-container__field-label\">Адрес:</label>\n            <input className=\"curretn-apartment-container__field-input form-control\" type=\"text\"\n                onChange={handleAddressChange}\n                value={apartmentFields.address}\n            />\n        </div>\n    </div>\n        <div className=\"current-apartment-container__item\">\n            <div className=\"current-apartment-container__field\">\n                <label className=\"current-apartment-container__field-label\">Статус:</label>\n                <select className=\"custom-select\" onChange={handleIsVipChange} >\n                    <option value=\"1\">VIP</option>\n                    <option value=\"0\">Эконом</option>\n                </select>\n            </div>\n        </div>\n        <div className=\"current-apartment-container__item\">\n            <div className=\"current-apartment-container__field\">\n                <label className=\"current-apartment-container__field-label\" >Количество комнат:</label>\n                <input className=\"curretn-apartment-container__field-input form-control\"\n                    onChange={handleRoomAmountChange}\n                    value={apartmentFields.roomAmount}\n                    type=\"text\" />\n            </div>\n        </div>\n        <div className=\"current-apartment-container__item\">\n            <div className=\"current-apartment-container__field\">\n                <div className=\"custom-file  pointer\" >\n                    <input type=\"file\" className=\"custom-file-input\" id=\"loadapartment-images \" onChange={handleImageLoad} />\n                    <label className=\"custom-file-label\" htmlFor=\"loadapartment-images\">Выберите файл для загрузки фотографии квартиры</label>\n                </div>\n            </div>\n        </div>\n        <div className=\"current-apartment-container__item\">\n            <div className=\"current-apartment-container__field\">\n                <label className=\"current-apartment-container__field-label\">Цена:</label>\n                <input className=\"curretn-apartment-container__field-input form-control\" onChange={handlePriceChange} value={apartmentFields.price} type=\"text\" />\n            </div>\n        </div>\n        <div className=\"current-apartment-container__item\">\n            <div className=\"form-group\">\n                <button className=\"btn btn-success w-100\" onClick={handleAddApartment}>ДОБАВИТЬ</button>\n            </div>\n        </div></>);\n}\n\n\nconst EditServiceInput = ({ apartmentId }) => {\n\n\n    const { data: allServices, error, loading } = useSelector((state) => state.services);\n    const { data: services } = useSelector(state => state.servicesForCurrentApartment);\n    const { value: selectedServiceId, bind } = useField('null');\n    const dispatch = useDispatch();\n    // console.log(allServices);\n    useEffect(() => {\n        dispatch(getAllServiceAction());\n    }, []);\n    useEffect(() => {\n        dispatch(getServicesForApartmentAction(apartmentId));\n    }, [apartmentId]);\n    const handleAddServiceToApartment = () => {\n        if (!(selectedServiceId == 'null')) {\n            dispatch(addServiceToApartmentAction(apartmentId, selectedServiceId));\n        }\n    }\n    const handleDeleteServiceFromApartment = (apartmentId, serviceId) => {\n        dispatch(deleteServiceFromApartmentAction(apartmentId, serviceId));\n    }\n    return (<div className=\"edit-apartmentcontainer__item d-flex\">\n        <div className=\"apartment-service-container\">\n            {(services && services.length) ? (\n                services.map((item) => {\n                    return <span className=\"apartment-service-container-item\"\n                        key={item.id}>{item.name}<BsXCircle\n                            onClick={() => { handleDeleteServiceFromApartment(apartmentId, item.id) }}\n                            className=\"apartment-service-icon\" /></span>\n                })\n            ) : null}\n        </div>\n        <div className=\"form-group\">\n            <select {...bind} className=\"form-control\" >\n                <option value=\"null\">выберите услугу</option>\n                {allServices.map((serviceInstance) => {\n                    let curServicesIds = services.map((el) => el.id);\n                    if (curServicesIds.includes(serviceInstance.id)) {\n                        return null;\n                    }\n                    return (<option\n                        key={serviceInstance.id}\n                        value={serviceInstance.id}\n                    >{serviceInstance.name}</option>)\n                })}\n            </select>\n        </div>\n        <div className=\"ml-3\">\n            <button disabled={selectedServiceId == 'null'} onClick={handleAddServiceToApartment} className=\"btn btn-success add-subway-btn\">+</button>\n        </div>\n    </div>);\n}\n\nconst EditSubWayInput = ({ apartmentId }) => {\n    const dispatch = useDispatch();\n    const { data: subways, error, loading } = useSelector(state => state.subwaysNotIncludedInApartment);\n    const popupInfo = useSelector(state => state.popupInfo);\n    useEffect(() => {\n        dispatch(getAllSubWaysAction(apartmentId));\n    }, [apartmentId]);\n\n    const { value: addedSubway, bind } = useField('null');\n    if (popupInfo.subwayAdded) {// если успешно добавлено метро\n        document.location.reload();\n    }\n    const handleAddSubWayToApartment = () => {\n        if (addedSubway == 'null') {\n            return;\n        }\n        // добавляем метро к текущей комнате\n        dispatch(addSubwayForApartmentAction(addedSubway, apartmentId));\n    }\n    return (<div className=\"edit-apartmentcontainer__item d-flex\" >\n        <div className=\"form-group\">\n            <select {...bind} className=\"form-control\" >\n                <option value=\"null\">выберите метро</option>\n                {(subways && subways.length) && (\n                    subways.map((item) => {\n                        return <option key={item.id} value={item.id}>{item.name}</option>\n                    })\n                )}\n            </select>\n        </div>\n        <div className=\"ml-3\">\n            <button onClick={handleAddSubWayToApartment} className=\"btn btn-success add-subway-btn\">+</button>\n        </div>\n    </div>);\n}\n\nexport const ApartmentPage = () => {\n    const dispatch = useDispatch();\n    let { path, url } = useRouteMatch();\n    const { data: apartments, error, loading } = useSelector((state) => state.apartments);\n    const handleAddApartment = (apartmentsField) => {\n        dispatch(createApartmentAction(apartmentsField));\n    }\n    useEffect(() => {\n        dispatch(getAllApartmentsAction());\n    }, []);\n    return (\n        <div className=\"apartment-container\">\n            <aside className=\"apartment-list-container\">\n                <div className=\"apartment-list-container__item\">\n                    <ul className=\"list-group apartment-list-container__item-list\">\n                        <li className=\"list-group-item active\">Все квартиры</li>\n                        {(apartments && apartments.length) ? apartments.map((apartment) => {\n                            return (<li className=\"list-group-item\" key={apartment.id}>\n                                <Link to={`${url}/${apartment.id}`}>{apartment.address}</Link></li>)\n                        }) : null}\n                        <li className=\"list-group-item\"><Link to='/apartments'>Создать квартиру</Link></li>\n                    </ul>\n                </div>\n                <div className=\"apartment-list-container__item\">\n                </div>\n            </aside>\n            <section className=\"current-apartment-container \">\n                <Switch>\n                    <Route path={path} exact>\n                        <AddApartment handleAddApartmentListener={handleAddApartment} />\n                    </Route>\n                    <Route path={`${path}/:apartmentId`}>\n\n                        <EditApartment />\n\n                    </Route>\n                </Switch>\n            </section>\n        </div>\n    )\n}","  export function objectHasProps(obj, props) {\r\n           let isPropsIn = true;\r\n             props.forEach((p)=>{\r\n                if(!(p in obj) ){\r\n                    isPropsIn = false;\r\n                }\r\n             });\r\n             return isPropsIn;\r\n        }","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { submitUserAction } from '../reducers/actions';\r\nexport const LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const handleEmailChange = (e) => {\r\n        setUserData((prevData) => ({\r\n            ...prevData,\r\n            email: e.target.value\r\n        }))\r\n    }\r\n    const handlePassChange = (e) => {\r\n        setUserData((prevData) => ({\r\n            ...prevData,\r\n            password: e.target.value\r\n        }));\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch(submitUserAction(userData.email, userData.password));\r\n    }\r\n\r\n    const { isAuth } = useSelector(state => state);\r\n    const { authError } = useSelector((state) => state.popupInfo);\r\n    if (isAuth) {\r\n        return <Redirect to=\"/orders\" />\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"my-3\">\r\n                {authError && <div className=\"alert alert-danger\">{authError.msg}</div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n\r\n                <div className=\"my-3\">\r\n                    <input type=\"text\"\r\n                        value={userData.email}\r\n                        onChange={handleEmailChange}\r\n                        placeholder=\"email\"\r\n                        className=\"form-control \" />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"pass\"\r\n                        value={userData.password}\r\n                        onChange={handlePassChange}\r\n                        className=\"form-control \" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-primary w-100\" onClick={handleSubmit}>Войти</button>\r\n            </div>\r\n        </div>);\r\n}","\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {handleDeleteSubWayAction, addSubWayAction,getAllSubWaysAction } from '../reducers/actions'\nimport './subway.css';\n\n\n\n\nexport const SubWayPage = () => {\n    const [subWayFields, setSubWayFields] = useState({\n        name: '',\n        geo: ''\n    });\n\n    const dispatch = useDispatch();\n    const { error, success } = useSelector((state) => state.popupInfo);\n    const changeSubNameHandler = (e) => {\n        setSubWayFields((prevState) => {\n            return {\n                ...prevState,\n                name: e.target.value\n            }\n        });\n    }\n    const changeSubWayGeo = (e) => {\n        let fullStr = e.target.value;\n        setSubWayFields((prevState) => {\n            return {\n                ...prevState,\n                geo: fullStr\n            }\n        })\n    }\n    const handleAddSubWay = () => {\n        dispatch(addSubWayAction(subWayFields));\n    }\n    const {data: subways, error:subwayError, loading} = useSelector((state)=>state.subwaysNotIncludedInApartment);\n    const handleDeleteSubWay=(subwayId)=>{\n        dispatch(handleDeleteSubWayAction(subwayId));\n    }\n    useEffect(()=>{\n        dispatch(getAllSubWaysAction())\n    },[]);\n    return (<div className=\"subway-container d-flex\">\n        <aside className=\"all-subways\">\n            <ul className=\"list-group apartment-list-container__item-list\">\n                <li className=\"list-group-item active\" >Список метро</li>\n                {(subways && subways.length) ?subways.map((item)=>{\n                    return (\n                    <li className=\"list-group-item d-flex justify-content-between\" \n                        key={item.id}><span>{item.name}</span><button className=\"btn btn-danger\"\n                        onClick={()=>handleDeleteSubWay(item.id)}>x</button>\n                        </li>)\n\n                }):null}            \n            </ul>\n        </aside>\n        <section className=\"subway-create-metro\" >\n            {success && <div className=\"alert alert-success\">{success.msg}</div>}\n            {error && <div className=\"alert alert-danger\">{error.msg}</div>}\n            <div className=\"form-group \">\n                <input className=\"form-control \" type=\"text\"\n                    value={subWayFields.name}\n                    onChange={changeSubNameHandler}\n                    placeholder=\"Название метро\" />\n                <textarea className=\"form-control  my-3\"\n                    value={subWayFields.geo}\n                    onChange={changeSubWayGeo}\n                    placeholder=\"Введите координаты метро через запятую Например 124,243\" />\n                <button className=\"btn btn-success  my-1\" onClick={handleAddSubWay}>Сохранить метро</button>\n            </div>\n        </section>\n    </div>);\n}","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllServiceAction, deleteServiceAction, addServiceAction, updateServiceNameAction } from '../reducers/actions'\r\nimport './subway.css';\r\n\r\n\r\nexport const ServiceForApartmentPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [servicesName, setServicesName] = useState('');\r\n    const handleServicesNameChange = (e) => {\r\n        setServicesName(e.target.value);\r\n    }\r\n    const handleAddService = (e) => {\r\n        dispatch(addServiceAction(servicesName));\r\n    }\r\n\r\n    const { data: allServices, error, loading } = useSelector((state) => state.services);\r\n\r\n    const [curServiceId, setCurServiceId] = useState(null);\r\n    const [chosenServiceName, setChosenServiceName] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllServiceAction());\r\n    }, [handleAddService]);\r\n\r\n    const handleCurentServiceChoose = (id, name) => {\r\n        setCurServiceId(id);\r\n        setChosenServiceName(name);\r\n    }\r\n    const handleDeleteService = (serviceId) => {\r\n        dispatch(deleteServiceAction(serviceId));\r\n    }\r\n    const handleBlurChange = () => {\r\n        if (curServiceId) {\r\n            dispatch(updateServiceNameAction(curServiceId, chosenServiceName));\r\n        }\r\n        setCurServiceId(null);\r\n    }\r\n    const { addNewServiceSuccess } = useSelector(state => state.popupInfo);\r\n    return (<div className=\"subway-container d-flex\">\r\n        <aside className=\"all-subways\">\r\n            <ul className=\"list-group apartment-list-container__item-list\">\r\n                <li className=\"list-group-item active\">Список услуг</li>\r\n                {(allServices && allServices.length) ? (\r\n                    allServices.map((item) => {\r\n                        if (curServiceId == item.id) {\r\n                            return (<li\r\n                                key={item.id} className=\"list-group-item active\"><input\r\n                                    type=\"text\"\r\n                                    onBlur={handleBlurChange}\r\n                                    className=\"form-control\"\r\n                                    value={chosenServiceName}\r\n                                    onChange={(e) => setChosenServiceName(e.target.value)}\r\n                                /></li>)\r\n                        }\r\n                        return <li className=\"list-group-item d-flex justify-content-between\"\r\n                            onClick={() => handleCurentServiceChoose(item.id, item.name)}\r\n                            key={item.id}><span>{item.name}</span><button className=\"btn btn-danger\" onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleDeleteService(item.id);\r\n                            }}>x</button></li>\r\n                    })\r\n                ) : null}\r\n            </ul>\r\n        </aside>\r\n        <section className=\"subway-create-metro\" >\r\n            {addNewServiceSuccess && (<div className=\"alert alert-success\">{addNewServiceSuccess.msg}</div>)}\r\n            <div className=\"form-group \">\r\n                <input className=\"form-control \" type=\"text\"\r\n                    value={servicesName}\r\n                    onChange={handleServicesNameChange}\r\n                    placeholder=\"Название услуги\" />\r\n                <button className=\"btn btn-success  my-1\" onClick={handleAddService}>Сохранить услугу</button>\r\n            </div>\r\n        </section>\r\n    </div>);\r\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ children: Component, ...rest }) => {\n    const { isAuth } = useSelector((state) => state);\n    return <Route {...rest}  >\n        {(() => {\n            return isAuth ? Component : <Redirect to='/login' />;\n        })()}\n    </Route>\n}","import { useState, useEffect } from 'react'\nimport { OrderComponent } from './components/OrderComponent';\nimport { NavigationComponent } from './components/NavigationComponent';\nimport { FilterOrderComponent } from './components/FilterOrderComponent';\nimport { AspireComponent } from './components/AspireComponent';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrdersAction, logoutAction } from './reducers/actions';\nimport { BrowserRouter as Router, Link, Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\nimport { Header } from './routercomponents/Header';\nimport { OrderPage } from './routercomponents/OrderPage';\nimport { ApartmentPage } from './routercomponents/ApartmentPage';\nimport { LoginPage } from './routercomponents/LoginPage';\nimport { SubWayPage } from './routercomponents/SubWayPage';\nimport { ServiceForApartmentPage } from './routercomponents/ServiceForApartmentPage';\nimport { PrivateRoute } from './components/PrivateRoute';\n\nfunction LogOutPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(logoutAction());\n  }, []);\n  return <Redirect to=\"/login\" />;\n}\n//TODO : LOGIN PAGE\nfunction App() {\n  function logOut() {\n    localStorage.removeItem('token');\n    return true;\n  }\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/logout\">\n          <LogOutPage />\n        </Route>\n        <Route exact path='/login'>\n          <LoginPage />\n        </Route>\n        <PrivateRoute exact path='/orders'>\n          <OrderPage />\n        </PrivateRoute>\n        <Route path='/apartments'>\n          <ApartmentPage />\n        </Route>\n        <Route path='/subways'>\n          <SubWayPage />\n        </Route>\n        <Route path='/services'>\n          <ServiceForApartmentPage />\n        </Route>\n      </Switch>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport axios from 'axios';\nexport class ServiceUtilContainer {\n    constructor() {\n    }\n    config() {\n        const config = {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n        }\n        return config;\n    }\n    async getToken(email, pass) {\n        let response = await axios.post('/api/login', {\n            email,\n            pass\n        });\n        return response;\n    }\n    async deleteService(serviceId) {\n        let response = await axios.post('/api/services/delete', {\n            serviceId\n        });\n        return response;\n    }\n    async addService(serviceName) {\n        let response = await axios.post('/api/services/create', {\n            serviceName\n        }, this.config());\n        return response;\n    }\n    async deleteSubWayById(subwayId) {\n        let response = await axios.post(`/api/subway/delete/${subwayId}`, this.config());\n        return response;\n    }\n    async updateServiceName(serviceId, newServiceName) {\n        let response = await axios.post('/api/services/update',\n            {\n                serviceId,\n                newServiceName\n            }, this.config());\n        return response;\n    }\n    async addServiceToApartment(apartmentId, selectedServiceId) {\n\n        let response = await axios.post('/api/services/add-to-apartment', {\n            apartmentId,\n            selectedServiceId\n        }, this.config());\n        return response;\n    }\n\n    async getAllServices() {\n        let response = await axios.get('/api/services/all');\n        return response;\n    }\n\n    async deleteServiceFromApartmentAction(apartmentId, serviceId) {\n        let response = await axios.post('/api/services/remove-from-apartment', {\n            apartmentId,\n            serviceId\n        }, this.config());\n        return response;\n\n    }\n    async getServicesForApartment(apartmentId) {\n        let response = await axios.get(`/api/services/all-for-apartment/${apartmentId}`, this.config());\n        return response;\n    }\n    async addSubway(name, geo) {\n        let response = await axios.post('/api/subway/add', { name, geo }, this.config());\n        return response;\n    }\n    async removeSubWayFromApartment(apartmentId, subwayId) {\n        let response = await axios.post(`/api/apartments/${apartmentId}/remove-subway/${subwayId}`, this.config());\n\n        return response;\n    }\n    /*\n    * \n    route(\"/api/subway/all)\" */\n    async getAllSubWays() {\n        let response = await axios.get('/api/subway/all', this.config());\n        return response;\n    }\n    async deleteApartmentById(apartmentId) {\n        let response = await axios.post(`/api/apartments/delete/${apartmentId}`, this.config());\n        return response;\n    }\n    async addSubwayForApartment(addedSubwayId, apartmentId) {\n        let response = await axios.post('/api/apartments-subway/add-to-apartment', {\n            addedSubwayId, apartmentId\n        }, this.config());\n        return response;\n    }\n    async getAllSubway(apartmentId = null) {\n        let url = '/api/apartments-subway/allsubway-for-apartment/';\n        if (typeof apartmentId !== 'null') {\n            url += apartmentId;\n        }\n        let response = axios.get(url, this.config());\n        return response;\n    }\n    async addNewImageToApartment(apartmentId, imageFilesArray) {\n        let formData = new FormData();\n        imageFilesArray.forEach((file, index) => {\n            formData.append(`apartment_added_image_${index}`, file);\n        });\n        let response = await axios.post(`/api/apartments/add-images/${apartmentId}`, formData, this.config());\n        return response;\n    }\n    async updateApartmentById(apartmentId, fields) {\n        let response = await axios.post(`/api/apartments/update-basic-fields/${apartmentId}`, fields, this.config());\n        return response;\n    }\n    async deleteApartmentImageByIndex(apartmentId, imageIndex) {\n        let response = await axios.post(`/api/apartments/delete-image-by-index`, {\n            apartmentId, imageIndex\n        }, this.config());\n        return response;\n    }\n    async getApartmentById(apartmentId) {\n        let response = await axios.get(`/api/apartments/${apartmentId}`, this.config());\n        return response;\n    }\n    async getAllApartments() {\n        let response = await axios.get('/api/apartments/all-without-pagination', this.config());\n        return response;\n    }\n    async createApartment(data) {\n        // формируем formData\n        let formData = new FormData();\n        let index = 1;\n        data.images.forEach((image) => {\n            formData.append(`image_${index}`, image);\n            index++;\n        });\n        delete data['images'];\n        // create formData \n        for (let key in data) {\n            formData.append(key, data[key]);\n        }\n        let response = await axios.post('/api/apartments/create', formData, this.config());\n        return response;\n    }\n    async updateOrderStatus(selectedStatus, orderId) {\n        try {\n            let response = await fetch('/api/order/update-status', {\n                method: 'POST',\n                credentials: 'same-origin', // include, *same-origin, omit\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ selectedStatus, orderId })\n            });\n            let data = response.json();\n            return data;\n        } catch (e) {\n            console.log(e);\n            return {\n                status: 'error'\n            };\n        }\n    }\n    async getOrders(page = 1, { filterObject }) {\n        let finalUrl = '/api/order/all/?limit=5&page=' + page;\n        if (filterObject.fromDate) {\n            finalUrl += '&from=' + filterObject.fromDate\n        }\n        if (filterObject.toDate) {\n            finalUrl += '&to=' + filterObject.toDate;\n        }\n        let { data } = await axios.get(finalUrl, this.config());\n        console.log(filterObject, \"FILTER OBJECT\")\n        return data;\n    }\n}\n\n\nexport class DummyContainer {\n    constructor() {\n    }\n    async updateOrderStatus(selectedStatus, orderId) {\n\n    }\n    async getOrders(page = 1, { filterObject }) {\n        return { \"status\": \"ok\", \"orders\": [{ \"fullInfo\": { \"client\": { \"name\": \"Карл\", \"secondname\": \"Марков\", \"email\": \"dummy@mail.ru\", \"phone\": 88005553535 }, \"rooms\": [{ \"id\": 1, \"address\": \"ул Глупнинская дом 9 кв 104\", \"price\": 3600, \"roomAmount\": 3, \"services\": \"['Уборка','Стирка','Гладка']\", \"withChilds\": true, \"withAnimals\": false }] }, \"id\": 5, \"status\": 0, \"createdAt\": \"2021-01-24T13:39:23.000Z\", \"updatedAt\": \"2021-01-24T13:39:23.000Z\" }, { \"fullInfo\": { \"client\": { \"name\": \"Bob\", \"secondname\": \"Marlie\", \"email\": \"karpov-vb-1996@mail.ru\", \"phone\": 8808555 }, \"rooms\": [{ \"id\": 1, \"address\": \"ул Тушинская дом 3 кв 67\", \"price\": 2800, \"roomAmount\": 3, \"services\": \"['Уборка','Стирка','Гладка']\", \"withChilds\": true, \"withAnimals\": false }] }, \"id\": 11, \"status\": 0, \"createdAt\": \"2021-01-24T14:01:39.000Z\", \"updatedAt\": \"2021-01-24T14:01:39.000Z\" }, { \"fullInfo\": { \"client\": { \"name\": \"Bob\", \"secondname\": \"Marlie\", \"email\": \"karpov-vb-1996@mail.ru\", \"phone\": 8808555 }, \"rooms\": [{ \"id\": 1, \"address\": \"ул Тушинская дом 3 кв 67\", \"price\": 2800, \"personsAmount\": 3, \"roomAmount\": 3, \"services\": \"['Уборка','Стирка','Гладка']\", \"withChilds\": true, \"withAnimals\": false }] }, \"id\": 12, \"status\": 0, \"createdAt\": \"2021-01-24T14:07:52.000Z\", \"updatedAt\": \"2021-01-24T14:07:52.000Z\" }] }\n    }\n}","\nexport function immitateDeletionServiceFromApartment(servicesForCurrentApartment, serviceId) {\n    servicesForCurrentApartment.data = servicesForCurrentApartment.data.filter((item) => {\n        return item.id != serviceId\n    });\n    return servicesForCurrentApartment;\n}\n\nexport function immitateAddServiceToApartment(data,service){\n\tlet copy =  [...data];\n\tlet isServiceAlreadyThere = false;\n            copy.forEach((item)=>{\n                if(item.id ==service.id){\n                        isServiceAlreadyThere = true;\n                }\n\t\t\t});\n\tif(!isServiceAlreadyThere){\n\t\tcopy = [...copy, service];\n    }\n    return copy;\n\n}","import { DummyContainer, ServiceUtilContainer } from \"../util/serviceUtil\";\nimport { GET_TOKEN_SUCCESS, GET_TOKEN_ERROR, DELETE_SUBWAY_BY_ID_SUCCESS, DELETE_SUBWAY_BY_ID_ERROR, IMAGE_ADD_TO_APARTMENT_FAIL, REMOVE_SUBWAY_FROM_APARTMENT_ERROR, ADD_SUBWAY_TO_APARTMENT_ERROR, ADD_SERVICE_TO_APARTMENT_ERROR, UPDATE_SERVICE_NAME_ERROR, UPDATE_SERVICE_NAME_SUCCESS, ADD_SERVICE_TO_APARTMENT_SUCCESS, GET_ALL_SERVICES_SUCCESS, GET_ALL_SERVICES_ERROR, REMOVE_SERVICE_FROM_APARTMENT_SUCCESS, REMOVE_SERVICE_FROM_APARTMENT_ERROR, GET_SERVICE_TO_APARTMENT_ERROR, GET_SERVICE_TO_APARTMENT_SUCCESS, DELETE_APARTMENT_BY_ID_SUCCESS, REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS, GET_ORDERS, CREATE_APARTMENT, ADD_SUBWAY_TO_APARTMENT_SUCCESS, CREATE_APARTMENT_ERROR, GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR, GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS, GET_APARTMENTS, IMAGE_ADD_TO_APARTMENT_SUCESS, GET_APARTMENT_BY_ID, DELETE_APARTMENT_IMAGE_SUCCESS, ADD_SUBWAY_ERROR, ADD_SUBWAY_SUCCESS, UPDATE_BASIC_FIELDS_SUCCESS, DELETE_APARTMENT_BY_ID_ERROR, CLEAR_ORDER_EVENT, ADD_NEW_SERVICE_ERROR, ADD_NEW_SERVICE_SUCCESS, LOG_OUT } from \"./actions\";\nimport { immitateDeletionServiceFromApartment, immitateAddServiceToApartment } from \"./redux-helpers\";\n\n\n// тут только одну переменную меняешь\nlet isDummy = false;\nconst initialState = {\n    isAuth: localStorage.getItem('token') ? true : false,\n    serviceUtilContainer: !isDummy ? new ServiceUtilContainer() : new DummyContainer(),\n    orders: {\n        data: [],\n        error: false,\n        loading: false\n    },\n    adminToken: localStorage.getItem('token') ? localStorage.getItem('token') : '',\n    subwaysNotIncludedInApartment: {\n        data: [],\n        error: false,\n        loading: false\n    },\n    apartment: {\n        data: {},\n        error: false,\n        loading: false\n    },\n    // услуги типа уборка постель и тд\n    services: {\n        data: [],\n        error: false,\n        loading: false\n    },\n\n    apartments: {\n        data: [],\n        error: false,\n        loading: false\n    },\n    servicesForCurrentApartment: {\n        data: [],\n        error: false,\n        loading: false\n    },\n    popupInfo: {\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case LOG_OUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                isAuth: false\n            }\n        case GET_TOKEN_SUCCESS:\n            console.log(payload);\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                isAuth: true,\n                popupInfo: {}\n            };\n        case GET_TOKEN_ERROR:\n            return {\n                ...state,\n                isAuth: false,\n                popupInfo: {\n                    authError: {\n                        msg: 'Доступ был запрещен'\n                    }\n                }\n            }\n        case ADD_NEW_SERVICE_SUCCESS:\n\n            return {\n                ...state,\n\n                popupInfo: {\n                    addNewServiceSuccess: {\n                        msg: 'успешно создана новая услуга'\n                    }\n                }\n            }\n        case ADD_NEW_SERVICE_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    addNewServiceError: {\n                        msg: 'не удалось создать новую услугу'\n                    }\n                }\n            }\n        case CLEAR_ORDER_EVENT:\n            return {\n                ...state,\n                popupInfo: {}\n            }\n        case DELETE_SUBWAY_BY_ID_SUCCESS:\n\n            return {\n                ...state,\n                subwaysNotIncludedInApartment: {\n                    ...state.subwaysNotIncludedInApartment,\n                    data: payload.subways,\n                }\n            }\n        case DELETE_SUBWAY_BY_ID_ERROR:\n            return {\n                ...state,\n            }\n        case UPDATE_SERVICE_NAME_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    error: {\n                        msg: 'Не удалось обновить данные'\n                    }\n                }\n            };\n        case UPDATE_SERVICE_NAME_SUCCESS:\n            let servicesCopy = [...state.services.data];\n            servicesCopy = payload.services;\n            return {\n                ...state,\n                services: {\n                    ...state.services,\n                    data: servicesCopy\n                },\n                popupInfo: {\n                    updateServiceSuccess: true\n                }\n            }\n        case ADD_SERVICE_TO_APARTMENT_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    error: {\n                        msg: 'при добавлении сервиса к текущей квартире произошла ошибка'\n                    }\n                }\n            }\n        case ADD_SERVICE_TO_APARTMENT_SUCCESS:\n            // добавляем к услугам для ТЕКУЩЕГО\n            // квартиры\n            // let copy = state.servicesForCurrentApartment.data;\n            // let isServiceAlreadyThere = false;\n            // copy.forEach((item)=>{\n            //     if(item.id ==payload.service.id){\n            //             isServiceAlreadyThere = true;\n            //     }\n            // })\n            // if(!isServiceAlreadyThere){\n            //     copy = [...copy, payload.service];\n            // }\n\n            return {\n                ...state,\n                servicesForCurrentApartment: {\n                    ...state.servicesForCurrentApartment,\n                    data: immitateAddServiceToApartment(state.servicesForCurrentApartment.data, payload.service)\n                },\n                popupInfo: {\n                    serviceAddToApartmentSuccess: true\n                }\n            }\n        case GET_ALL_SERVICES_SUCCESS:\n            return {\n                ...state,\n                services: {\n                    data: payload.services,\n                    error: false,\n                    loading: false\n                },\n            }\n        case GET_ALL_SERVICES_ERROR:\n            return {\n                ...state,\n                services: {\n                    data: [],\n                    error: {\n                        msg: 'Не удалось получить ни одной услуги'\n                    },\n                    loading: false\n                }\n            }\n        case REMOVE_SERVICE_FROM_APARTMENT_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    error: {\n                        msg: 'не удалось удалить услугу произошла ошибка на сервере'\n                    }\n                }\n            }\n        case REMOVE_SERVICE_FROM_APARTMENT_SUCCESS:\n            //TODO: сделать аналогично для добавления\n            let servicesForCurrentApartmentAfterDelete = immitateDeletionServiceFromApartment(state.servicesForCurrentApartment, payload.serviceId);\n\n            return {\n                ...state,\n                servicesForCurrentApartment: servicesForCurrentApartmentAfterDelete,\n                popupInfo: {\n                    removeApartmentFromApartmentSuccess: true\n                }\n            }\n        case GET_SERVICE_TO_APARTMENT_SUCCESS:\n            return {\n                ...state,\n\n                servicesForCurrentApartment: {\n                    data: payload.services,\n                    error: false,\n                    loading: false\n                }\n            };\n        case GET_SERVICE_TO_APARTMENT_ERROR:\n            return {\n                ...state,\n                servicesForCurrentApartment: {\n                    data: [],\n                    error: {\n                        msg: 'Не было получено услуг для текущей квартиры'\n                    },\n                    loading: false\n                }\n            };\n        case ADD_SUBWAY_SUCCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    success: {\n                        msg: payload.msg\n                    }\n                }\n            }\n        case ADD_SUBWAY_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    error: {\n                        msg: payload.msg\n                    }\n                }\n            };\n        case REMOVE_SUBWAY_FROM_APARTMENT_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    error: {\n                        msg: 'при удалении метро из текущей квартиры произошла ошибка'\n                    }\n                }\n            }\n        case REMOVE_SUBWAY_FROM_APARTMENT_SUCCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    removeSubWayFromApartmentSuccess: true\n                }\n            }\n        case DELETE_APARTMENT_BY_ID_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    deletedApartmentSuccess: false\n                }\n            }\n        case DELETE_APARTMENT_BY_ID_SUCCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    deletedApartmentSuccess: true\n                }\n            }\n\n        case ADD_SUBWAY_TO_APARTMENT_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    subwayAdded: false\n                }\n            }\n        case ADD_SUBWAY_TO_APARTMENT_SUCCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    subwayAdded: true\n                }\n            }\n        case GET_SUBWAY_FOR_CURRENT_APARTMENT_ERROR:\n            return {\n                ...state,\n                subwaysNotIncludedInApartment: {\n                    data: [],\n                    error: true,\n                    loading: false\n                }\n            };\n        case GET_SUBWAY_FOR_CURRENT_APARTMENT_SUCCESS:\n            return {\n                ...state,\n                subwaysNotIncludedInApartment: {\n                    data: payload.subways,\n                    error: false,\n                    loading: false\n                }\n            }\n        case IMAGE_ADD_TO_APARTMENT_FAIL:\n            return {\n                ...state,\n                popupInfo: {\n                    successfullyAdded: false\n                }\n            };\n        case IMAGE_ADD_TO_APARTMENT_SUCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    successfullyAdded: true\n                }\n            };\n        case DELETE_APARTMENT_IMAGE_SUCCESS:\n            return {\n                ...state,\n                popupInfo: {\n                    apartmentImageDeleted: true\n                }\n            };\n        case GET_APARTMENT_BY_ID:\n            return {\n                ...state,\n                apartment: {\n                    error: false,\n                    loading: false,\n                    data: payload.apartment\n                }\n            };\n        case GET_APARTMENTS:\n            return {\n                ...state,\n                apartments: {\n                    ...state.apartments,\n                    data: payload.apartments,\n                    error: false,\n                    loading: false,\n                }\n            }\n        case CREATE_APARTMENT_ERROR:\n            return {\n                ...state,\n                popupInfo: {\n                    msg: ' произошла ошибка при попытке создать квартиру'\n                }\n            };\n        case CREATE_APARTMENT:\n            return {\n                ...state,\n                popupInfo: {\n                    createOrderEvent: {\n                        msg: 'Заказ был создан успешно'\n                    },\n                    ...payload\n                }\n            }\n        case GET_ORDERS:\n            return {\n                ...state,\n                orders: {\n                    data: payload.data ? payload.data : [],\n                    error: payload.error,\n                    loading: payload.loading\n                }\n            };\n        case UPDATE_BASIC_FIELDS_SUCCESS:\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk'\nimport reducer from \"./reducers\";\nimport { BrowserRouter } from 'react-router-dom';\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}