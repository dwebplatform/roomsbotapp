[{"D:\\desctop\\roombot\\front-end\\src\\index.js":"1","D:\\desctop\\roombot\\front-end\\src\\App.js":"2","D:\\desctop\\roombot\\front-end\\src\\reportWebVitals.js":"3","D:\\desctop\\roombot\\front-end\\src\\components\\OrderComponent.js":"4","D:\\desctop\\roombot\\front-end\\src\\components\\AspireComponent.js":"5","D:\\desctop\\roombot\\front-end\\src\\reducers\\index.js":"6","D:\\desctop\\roombot\\front-end\\src\\reducers\\actions.js":"7","D:\\desctop\\roombot\\front-end\\src\\util\\serviceUtil.js":"8","D:\\desctop\\roombot\\front-end\\src\\components\\FilterOrderComponent.js":"9","D:\\desctop\\roombot\\front-end\\src\\components\\NavigationComponent.js":"10","D:\\desctop\\roombot\\front-end\\src\\routercomponents\\Header.js":"11","D:\\desctop\\roombot\\front-end\\src\\routercomponents\\OrderPage.js":"12","D:\\desctop\\roombot\\front-end\\src\\routercomponents\\ApartmentPage.js":"13"},{"size":768,"mtime":1611517996512,"results":"14","hashOfConfig":"15"},{"size":1044,"mtime":1612097385101,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":4037,"mtime":1611933728615,"results":"18","hashOfConfig":"15"},{"size":380,"mtime":1612093481754,"results":"19","hashOfConfig":"15"},{"size":1358,"mtime":1612112693868,"results":"20","hashOfConfig":"15"},{"size":2560,"mtime":1612112493115,"results":"21","hashOfConfig":"15"},{"size":3339,"mtime":1612112877988,"results":"22","hashOfConfig":"15"},{"size":1389,"mtime":1611932669435,"results":"23","hashOfConfig":"15"},{"size":1251,"mtime":1612095172849,"results":"24","hashOfConfig":"15"},{"size":280,"mtime":1612094357319,"results":"25","hashOfConfig":"15"},{"size":3310,"mtime":1612095035195,"results":"26","hashOfConfig":"15"},{"size":7006,"mtime":1612112257742,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"18i1ihc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"D:\\desctop\\roombot\\front-end\\src\\index.js",[],["61","62"],"D:\\desctop\\roombot\\front-end\\src\\App.js",["63","64","65","66","67","68","69","70","71","72","73"],"import { useState, useEffect } from 'react'\nimport { OrderComponent } from './components/OrderComponent';\nimport { NavigationComponent } from './components/NavigationComponent';\nimport { FilterOrderComponent } from './components/FilterOrderComponent';\nimport { AspireComponent } from './components/AspireComponent';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrdersAction } from './reducers/actions';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { Header } from './routercomponents/Header';\nimport { OrderPage } from './routercomponents/OrderPage';\nimport { ApartmentPage } from './routercomponents/ApartmentPage';\n\n\nfunction Home() {\n  return <div></div>\n}\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path='/orders'>\n          <OrderPage />\n        </Route>\n        <Route exact path='/apartments'>\n          <ApartmentPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","D:\\desctop\\roombot\\front-end\\src\\reportWebVitals.js",[],"D:\\desctop\\roombot\\front-end\\src\\components\\OrderComponent.js",["74"],"import { useField } from 'react-hooks-lib';\nimport { useDispatch } from 'react-redux';\nimport { updateStatusAction } from '../reducers/actions';\nimport './order.css';\n\nconst statuses = {\n    0: 'Новый заказ',\n    1: 'Аннулирован',\n    2: 'Совершен'\n};\nexport const OrderComponent = ({ id, className, fullInfo, status }) => {\n    //TODO: найти песню i like being\n    const { client, rooms } = fullInfo;\n    let copiedClient = client || {};\n    //TODO: сделать пагинацию в двух классах Service и Dummy\n    const { value: selectedStatus, bind } = useField(status + '');\n    const dispatch = useDispatch();\n    const handleChangeStatus = () => {\n        // dispatch async ...\n        dispatch(updateStatusAction(selectedStatus, id));\n    }\n    return (<div className={`order-container ${className ? className : ''}`}>\n        <div className={`order ${status == 0 ? 'order__status-new' : ''} `}>\n            <div className=\"order__client\">\n                <h3>Клиент</h3>\n                <div className=\"order__client-info \">\n                    <span className=\"order__client-field\">Имя:{copiedClient.name}</span>\n                    <span className=\"order__client-field\">Фамилия:{copiedClient.secondName}</span>\n                    <span className=\"order__client-field\">Возраст:{copiedClient.age}</span>\n                    <span className=\"order__client-field\">Телефон:{copiedClient.phone}</span>\n                    <span className=\"order__client-field\">mail:{copiedClient.email}</span>\n                </div>\n            </div>\n            <div className=\"order__apartments\">\n                <div className=\"order__apartments-items\">\n                    <h3 className=\"order__apartments-header\"><span>Квартиры</span><span> Статус : {statuses[status]}</span></h3>\n                    {\n                        Array.isArray(rooms) && rooms.map((room, index) => {\n                            return (<div className=\"order__apartments-item\" key={index}>\n                                <span className=\"order__apartment-field\">адрес:{room.address}</span>\n                                <span className=\"order__apartment-field\">кол-во гостей:{room.personsAmount}</span>\n                                <span className=\"order__apartment-field\">Наличие животных: {room.withAnimals ? 'Да' : 'Нет'}</span>\n                                <span className=\"order__apartment-field\">Дети:{room.withChilds ? 'Да' : 'Нет'}</span>\n                                {/* TODO: сделать тут услуги из бд-ки */}\n                                <span className=\"order__apartment-field\">Услуги:</span>\n                                <span className=\"order__apartment-field\">Время заезда:{room.fromDate}</span>\n                                <span className=\"order__apartment-field\">Время выезда:{room.toDate}</span>\n                                <span className=\"order__apartment-field\">Цена за апартаменты:{room.price}</span>\n                                <span className=\"order__apartment-field\">Цена c учетом услуг:{room.totalPrice}</span>\n                            </div>)\n                        })\n                    }\n                    <div className=\"order__status-btn-container\">\n                        <select className=\"order__status-selector\" {...bind}>\n                            {\n                                Object.keys(statuses).map((statusId) => {\n                                    return <option key={statusId} value={statusId}>{statuses[statusId]}</option>\n                                })\n                            }\n                        </select>\n                        <button className=\"order__status-btn\" onClick={handleChangeStatus}>Сменить статус </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","D:\\desctop\\roombot\\front-end\\src\\components\\AspireComponent.js",["75"],"export const AspireComponent = () => {\n    return (<div style={{\n        position: 'fixed',\n        top: 0,\n        zIndex: 10,\n        left: '85%',\n\n    }}>\n        <img style={{\n            width: '200px',\n            borderRadius: '50%',\n            height: '200px'\n        }} src=\"https://i.pinimg.com/originals/32/62/b5/3262b55de055134f1a10f886c30c808f.jpg\" />\n    </div>);\n}","D:\\desctop\\roombot\\front-end\\src\\reducers\\index.js",["76"],"D:\\desctop\\roombot\\front-end\\src\\reducers\\actions.js",["77","78"],"D:\\desctop\\roombot\\front-end\\src\\util\\serviceUtil.js",["79","80"],"D:\\desctop\\roombot\\front-end\\src\\components\\FilterOrderComponent.js",[],"D:\\desctop\\roombot\\front-end\\src\\components\\NavigationComponent.js",["81"],"import { Link } from 'react-router-dom';\n\nexport const NavigationComponent = () => {\n\n    return (<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                    <Link className=\"nav-link\" to=\"/\">Главная <span className=\"sr-only\"></span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\" >Войти</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/orders\" >Заказы</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/apartments\">Квартиры</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>)\n}","D:\\desctop\\roombot\\front-end\\src\\routercomponents\\Header.js",[],"D:\\desctop\\roombot\\front-end\\src\\routercomponents\\OrderPage.js",["82","83","84","85"],"\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OrderComponent } from '../components/OrderComponent';\nimport { FilterOrderComponent } from '../components/FilterOrderComponent';\nimport { getOrdersAction } from '../reducers/actions';\nexport const OrderPage = () => {\n    const dispatch = useDispatch();\n    const [curPage, setPage] = useState(1);\n    const [filterObject, setFilterObject] = useState({\n        fromDate: new Date().getTime() / 1000,\n        toDate: new Date().getTime() / 1000 + 30 * 24 * 3600\n    });\n    const handleFilterChange = ({ fromDate, toDate }) => {\n        let unixFromDate = Date.parse(fromDate) / 1000;\n        let unixToDate = Date.parse(toDate) / 1000;\n        // затем setим filterObject  фильтр в надежде что заработает\n        setFilterObject({\n            fromDate: unixFromDate,\n            toDate: unixToDate\n        });\n    }\n    useEffect(() => {\n        //TODO: check protected\n        // ! получаем  заказы\n        dispatch(getOrdersAction(curPage, { filterObject }));\n    }, [curPage, filterObject]);\n    const { data: orders, loading, error } = useSelector((store) => store.orders);\n\n    function OrderList() {\n        return (orders && orders.map((item, i) => {\n            return <OrderComponent id={item.id} className=\"main-container__item\" fullInfo={item.fullInfo} status={item.status} key={i} />\n        }));\n\n    }\n    return (\n        <section className=\"app\">\n            <div className=\"paddinger\" >\n                {/*//TODO: добавить  в фильтр поле статус !!!  */}\n                <FilterOrderComponent curentFilter={{ ...filterObject }} filterHandleChange={handleFilterChange} />\n            </div>\n            <main className=\"main-container\">\n                {error && <pre>JSON.stringify(error)</pre>}\n                <OrderList />\n            </main>\n            <nav className=\"main-navigation\" aria-label=\"Orders navigation \">\n                <ul className=\"pagination\">\n                    <li className=\"page-item\">\n                        <a className=\"page-link my-link\" onClick={(e) => {\n                            e.preventDefault();\n                            if (curPage <= 0) {\n                                return;\n                            } else {\n                                setPage((p) => p - 1);\n                            }\n                        }} aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span className=\"sr-only\">Previous</span>\n                        </a>\n                    </li>\n                    <li className=\"page-item \"><a className=\"page-link\" href=\"!#\">...</a></li>\n                    <li className=\"page-item\">\n                        <a className=\"page-link my-link\" onClick={(e) => {\n                            e.preventDefault();\n                            setPage((p) => p + 1);\n                        }} aria-label=\"Next\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                            <span className=\"sr-only\" >Next</span>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </section>\n    );\n}","D:\\desctop\\roombot\\front-end\\src\\routercomponents\\ApartmentPage.js",["86","87"],"\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './apartmentpage.css';\n\nimport { createOrderAction } from '../reducers/actions';\nexport const ApartmentPage = () => {\n    const [apartmentFields, setApartmentFields] = useState({\n        address: '',\n        isVip: 0,\n        roomAmount: 1,\n        images: [],\n        price: 2500\n    });\n    const dispatch = useDispatch();\n\n    const handleAddressChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                address: e.target.value\n            }\n        });\n    }\n    const handleIsVipChange = (e) => {\n        let value = e.target.value;\n        if (value == \"1\") {\n            setApartmentFields((prevState) => {\n                return {\n                    ...prevState,\n                    isVip: 1\n                }\n            })\n        } else {\n            setApartmentFields((prevState) => {\n                return {\n                    ...prevState,\n                    isVip: 0\n                }\n            })\n        }\n    }\n\n    const handlePriceChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                price: e.target.value\n            }\n        });\n    }\n\n    const handleRoomAmountChange = (e) => {\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                roomAmount: e.target.value\n            }\n        })\n    }\n    const handleImageLoad = async (e) => {\n\n        let file = e.target.files[0] || null;\n        if (!file) {\n            return;\n        }\n        setApartmentFields((prevState) => {\n            return {\n                ...prevState,\n                images: prevState.images.concat(file)\n            }\n        });\n        // let formData = new FormData();\n        // formData.append('file', file);\n\n        // let { data } = await axios.post('/api/apartments/create', formData);\n    }\n\n    const handleAddApartment = async (e) => {\n        e.preventDefault();\n\n        let copyApatrmentsFields = { ...apartmentFields };\n        dispatch(createOrderAction(copyApatrmentsFields));\n        // createApartment();\n        // let index = 1;\n        // copyApatrmentsFields.images.forEach((image) => {\n        //     formData.append(`image_${index}`, image);\n        //     index++;\n        // });\n        // delete copyApatrmentsFields['images'];\n        // console.log({ copyApatrmentsFields });\n        // // create formData \n        // let formData = new FormData();\n        // for (let key in copyApatrmentsFields) {\n        //     formData.append(key, copyApatrmentsFields[key]);\n        // }\n\n        // formData.append(`file`, apartmentFields.images[0]);\n        // let { data } = await axios.post('/api/apartments/create', formData);\n        // console.log(data);\n    }\n    return (\n        <div className=\"apartment-container\">\n            <aside className=\"apartment-list-container\">\n                <div className=\"apartment-list-container__item\">\n                    {/* todo из store получать список всех квартир */}\n                    <ul className=\"list-group apartment-list-container__item-list\">\n                        <li className=\"list-group-item active\">Все квартиры</li>\n                        <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n                        <li className=\"list-group-item\">Morbi leo risus</li>\n                        <li className=\"list-group-item\">Porta ac consectetur ac</li>\n                        <li className=\"list-group-item\">Vestibulum at eros</li>\n                    </ul>\n                </div>\n                <div className=\"apartment-list-container__item\">\n                </div>\n            </aside>\n            <section className=\"current-apartment-container \">\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"current-apartment-container__field\">\n                        <label className=\"curretn-apartment-container__field-label\">Адрес:</label>\n                        <input className=\"curretn-apartment-container__field-input form-control\" type=\"text\"\n                            onChange={handleAddressChange}\n                            value={apartmentFields.address}\n                        />\n                    </div>\n                </div>\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"current-apartment-container__field\">\n                        <label className=\"curretn-apartment-container__field-label\">Статус:</label>\n                        <select className=\"custom-select\" onChange={handleIsVipChange} >\n                            <option value=\"1\">VIP</option>\n                            <option value=\"0\">Эконом</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"current-apartment-container__field\">\n                        <label className=\"curretn-apartment-container__field-label\" >Количество комнат:</label>\n                        <input className=\"curretn-apartment-container__field-input form-control\"\n                            onChange={handleRoomAmountChange}\n                            value={apartmentFields.roomAmount}\n                            type=\"text\" />\n                    </div>\n                </div>\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"current-apartment-container__field\">\n                        <div className=\"custom-file  pointer\" >\n                            <input type=\"file\" className=\"custom-file-input\" id=\"loadapartment-images \" onChange={handleImageLoad} />\n                            <label className=\"custom-file-label\" htmlFor=\"loadapartment-images\">Выберите файл для загрузки фотографии квартиры</label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"current-apartment-container__field\">\n                        <label className=\"curretn-apartment-container__field-label\">Цена:</label>\n                        <input className=\"curretn-apartment-container__field-input form-control\" onChange={handlePriceChange} value={apartmentFields.price} type=\"text\" />\n                    </div>\n                </div>\n                <div className=\"current-apartment-container__item\">\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-success w-100\" onClick={handleAddApartment}>ДОБАВИТЬ</button>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":1,"column":20,"nodeType":"94","messageId":"95","endLine":1,"endColumn":29},{"ruleId":"92","severity":1,"message":"97","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":24},{"ruleId":"92","severity":1,"message":"98","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":29},{"ruleId":"92","severity":1,"message":"99","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":30},{"ruleId":"92","severity":1,"message":"100","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"101","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":21},{"ruleId":"92","severity":1,"message":"102","line":7,"column":23,"nodeType":"94","messageId":"95","endLine":7,"endColumn":34},{"ruleId":"92","severity":1,"message":"103","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":25},{"ruleId":"92","severity":1,"message":"104","line":9,"column":35,"nodeType":"94","messageId":"95","endLine":9,"endColumn":39},{"ruleId":"92","severity":1,"message":"105","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":23,"column":41,"nodeType":"108","messageId":"109","endLine":23,"endColumn":43},{"ruleId":"110","severity":1,"message":"111","line":9,"column":9,"nodeType":"112","endLine":13,"endColumn":97},{"ruleId":"92","severity":1,"message":"113","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":9,"column":21,"nodeType":"108","messageId":"109","endLine":9,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":49,"column":25,"nodeType":"108","messageId":"109","endLine":49,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":4,"column":5,"nodeType":"116","messageId":"117","endLine":5,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":58,"column":5,"nodeType":"116","messageId":"117","endLine":59,"endColumn":6},{"ruleId":"118","severity":1,"message":"119","line":6,"column":9,"nodeType":"112","endLine":6,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":27,"column":8,"nodeType":"122","endLine":27,"endColumn":31,"suggestions":"123"},{"ruleId":"92","severity":1,"message":"124","line":28,"column":27,"nodeType":"94","messageId":"95","endLine":28,"endColumn":34},{"ruleId":"118","severity":1,"message":"125","line":49,"column":25,"nodeType":"112","endLine":56,"endColumn":50},{"ruleId":"118","severity":1,"message":"125","line":63,"column":25,"nodeType":"112","endLine":66,"endColumn":46},{"ruleId":"92","severity":1,"message":"126","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":28,"column":19,"nodeType":"108","messageId":"109","endLine":28,"endColumn":21},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'OrderComponent' is defined but never used.","'NavigationComponent' is defined but never used.","'FilterOrderComponent' is defined but never used.","'AspireComponent' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getOrdersAction' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'INCREMENT' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'loading' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [curPage, dispatch, filterObject]",{"range":"132","text":"133"},[1079,1102],"[curPage, dispatch, filterObject]"]